# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET  /wms/manage					    controllers.Application.index

GET  /assets/*file					    controllers.Assets.at(path="/public", file)

GET  /wms/wms						    controllers.WMS.wms

POST /wms/sources/add					controllers.Application.addFile

POST /wms/styles/add					controllers.WMS.addStyle

GET /wms/sources/remove/:name				controllers.Application.removeFile(name)

GET /wms/styles/remove/:name				controllers.WMS.removeStyle(name)

POST /wms/styles/rename/:name				controllers.WMS.renameStyle(name)

POST /wms/sources/clear					controllers.Application.clearFiles

POST /wms/styles/clear					controllers.WMS.clearStyles

# REST API

GET /wms/api/sources					controllers.API.listSources

POST /wms/api/sources					controllers.API.registerSource

DELETE /wms/api/sources/:name				controllers.API.deleteSource(name)

POST /wps/api/processes                                 controllers.WPS.apiAddProcess

DELETE /wps/api/processes/:name				controllers.WPS.apiRemoveProcess(name)

# WPS end point

GET  /wps/manage					controllers.WPS.manage

GET  /wps/wps						controllers.WPS.wpsGet

POST  /wps/wps						controllers.WPS.wpsPost

GET /wps/tempResource/:name                             controllers.WPS.tempResource(name)


# REST Catalog API

GET /map/workspaces                                     controllers.CatalogAPI.listWorkspace(key: String ?= "")

GET /map/workspaces/:name/contexts                      controllers.CatalogAPI.listContexts(key: String ?= "", name)

GET /map/workspaces/:name/contexts/:id                  controllers.CatalogAPI.getContext(key: String ?= "",name,id)

POST /map/workspaces/:name/contexts                     controllers.CatalogAPI.addContext(key: String ?= "", name, path="")

#POST /map/workspaces/:name/contexts/path/*path         controllers.CatalogAPI.addContext(key: String ?= "",name, path)

POST /map/workspaces/:name/contexts/:id                 controllers.CatalogAPI.replaceContext(key: String ?= "",name,id)

DELETE /map/workspaces/:name/contexts/:id               controllers.CatalogAPI.removeContext(key: String ?= "",name,id)

#DELETE /map/workspaces/:name/path/*path                controllers.CatalogAPI.removePath(key: String ?= "",path)


# MapCatalog website

GET /home                                                                   controllers.General.home

GET /mapcatalog/public                                                      controllers.MapCatalogC.index

GET /mapcatalog/myworkspaces                                                controllers.MapCatalogC.myWorkspaces

GET /mapcatalog/workspace/:id_workspace                                     controllers.MapCatalogC.viewWorkspace(id_workspace : String)

GET /mapcatalog/workspace/:id_workspace/folder/:id_folder                   controllers.MapCatalogC.viewFolder(id_workspace: String, id_folder :  String)

GET /createworkspace                                                        controllers.MapCatalogC.createWorkspace

GET /mapcatalog/workspace/:id_workspace/folder/:id_folder/createFolder      controllers.MapCatalogC.createFolderFromParent(id_workspace : String, id_folder : String)

GET /mapcatalog/workspace/:id_workspace/createFolder                        controllers.MapCatalogC.createFolderFromRoot(id_workspace : String)

GET /mapcatalog/workspace/:id_workspace/monitor                             controllers.MapCatalogC.monitor(id_workspace : String)

GET /mapcatalog/manageWorkspaces                                            controllers.MapCatalogC.manageWorkspaces()

GET /mapcatalog/manageWorkspace/workspace/:id_workspace                     controllers.MapCatalogC.manageAWorkspace(id_workspace : String)

GET /mapcatalog/manageWorkspace/workspace/:id_workspace/user/:id_user       controllers.MapCatalogC.changeRights(id_workspace : String, id_user : String)

GET /mapcatalog/manageWorkspace/workspace/:id_workspace/delete              controllers.MapCatalogC.deleteWorkspace(id_workspace : String)

GET /mapcatalog/manageWorkspace/workspace/:id_workspace/update              controllers.MapCatalogC.updateWorkspace(id_workspace : String)

GET /mapcatalog/manageWorkspace/workspace/:id_workspace/castOut/:id_user    controllers.MapCatalogC.castOut(id_workspace : String, id_user : String)

GET /mapcatalog/workspace/:id_workspace/deleteFolder/:id_folder             controllers.MapCatalogC.deleteFolder(id_workspace : String , id_folder : String)

POST /mapcatalog/workspace/:id_workspace/addcontext                          controllers.MapCatalogC.addMapContextFromRoot(id_workspace : String)

POST /mapcatalog/workspace/:id_workspace/folder/:id_folder/addcontext        controllers.MapCatalogC.addContextFromParent(id_workspace : String, id_folder : String)

GET /profile                                                                controllers.General.profilePage()

GET /changeprofile                                                          controllers.General.changeProfile()

# Authentification

GET /login                                                  controllers.General.login

GET /logout                                                 controllers.General.logout

POST /login                                                 controllers.General.authenticate

GET /signin                                                 controllers.General.signin

POST /signin                                                controllers.General.signedin

#API REST

GET /mapcatalogapi/:id_context                                 controllers.MapCatalogAPI.getContext(id_context)

DELETE /mapcatalogapi/:id_context                              controllers.MapCatalogAPI.deleteContext(id_context)

GET /mapcatalogapi/workspace/listWorkspaces                    controllers.MapCatalogAPI.listWorkspaces

GET /mapcatalogapi/workspace/:id_workspace/listContexts        controllers.MapCatalogAPI.listContexts(id_workspace)

#404 not found

GET /notFound                                                  controllers.General.PageNotFound()